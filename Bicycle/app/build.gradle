apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.sebastienbalard.bicycle"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0-alpha"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation" : "$projectDir/schemas".toString()]
            }
        }

        resValue "string", "fabric_key", (project.findProperty("fabric.api.key") ?: "")
        resValue "string", "google_maps_key", (project.findProperty("google.maps.api.android.key") ?: "")
        //resValue "string", "key_google_maps_directions", (project.findProperty("google.maps.directions.api.web.key") ?: "")
        resValue "string", "bicycle_storage_endpoint", (project.findProperty("bicycle.storage.endpoint") ?: "")

        buildConfigField("String", "ROOM_DB_NAME", "\"bic_database\"")
        buildConfigField("int", "DAYS_BETWEEN_CONTRACTS_CHECK", "30")
    }
    buildTypes {
        debug {
            testCoverageEnabled false

            buildConfigField("long", "TIME_BEFORE_REFRESH_STATIONS_DATA_IN_SECONDS", "60")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField("long", "TIME_BEFORE_REFRESH_STATIONS_DATA_IN_SECONDS", "120")
        }
    }
    kotlin {
        experimental {
            coroutines 'enable'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

ext.support_libs_version = '27.1.1'
ext.play_services_version = '15.0.1'
ext.crashlytics_version = '2.6.8'
ext.logback_version = '1.1.1-6'
ext.arch_version = '1.1.1'
ext.retrofit_version = '2.3.0'
ext.kotlinx_coroutines_version = '0.20'
ext.koin_version = '1.0.0-beta-6'
ext.room_version = '1.1.1'
ext.jodatime_version = '2.9.9'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // support
    implementation "com.android.support:appcompat-v7:$support_libs_version"
    implementation "com.android.support:design:$support_libs_version"
    //implementation 'com.android.support:multidex:1.0.3'
    //implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    // play services
    implementation "com.google.android.gms:play-services-maps:$play_services_version"
    implementation "com.google.android.gms:play-services-location:$play_services_version"
    //implementation "com.google.android.gms:play-services-places:$play_services_version"
    // architecture
    implementation "android.arch.lifecycle:runtime:$arch_version"
    implementation "android.arch.lifecycle:extensions:$arch_version"
    kapt "android.arch.lifecycle:compiler:$arch_version"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    // apis
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.13'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'com.google.maps.android:android-maps-utils:0.4.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    implementation "net.danlew:android.joda:$jodatime_version"
    // logs
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation "com.github.tony19:logback-android-core:$logback_version"
    implementation "com.github.tony19:logback-android-classic:$logback_version"
    // tools
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlytics_version@aar") {
        transitive = true
    }
    // tests
    testImplementation 'junit:junit:4.12'
    testImplementation "joda-time:joda-time:$jodatime_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'org.robolectric:annotations:3.8'
    testImplementation 'org.robolectric:shadows-supportv4:3.8'
    //testImplementation 'org.robolectric:shadows-multidex:3.8'
    testImplementation 'org.mockito:mockito-core:2.20.1'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    // android tests
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
